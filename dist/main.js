'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

var _path = require('path');

var _io = require('./lib/io');

var _options = require('./lib/options');

var _container = require('./lib/container');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

process.on('unhandledRejection', console.error);

const plugin = _postcss2.default.plugin('postcss-split-value', options => {
	options = (0, _options.processOptions)(options);

	return async function (CSS, RESULT) {
		// setup containers for new files
		const containers = options.files.map(_container.createContainer);
		const updateContainers = (0, _container.createUpdaterFn)(containers);

		// do the work
		CSS.walkRules(updateContainers);

		// write files
		await Promise.all(containers.map(container => {
			const { outpath = options.outpath, name, result, files } = container;
			const file = (0, _path.join)(outpath, name);
			return (0, _io.write)(file, result.toString(), { flags: 'a' });
		}));
	};
});

exports.default = plugin;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLmpzIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJvbiIsImNvbnNvbGUiLCJlcnJvciIsInBsdWdpbiIsIm9wdGlvbnMiLCJDU1MiLCJSRVNVTFQiLCJjb250YWluZXJzIiwiZmlsZXMiLCJtYXAiLCJ1cGRhdGVDb250YWluZXJzIiwid2Fsa1J1bGVzIiwiUHJvbWlzZSIsImFsbCIsImNvbnRhaW5lciIsIm91dHBhdGgiLCJuYW1lIiwicmVzdWx0IiwiZmlsZSIsInRvU3RyaW5nIiwiZmxhZ3MiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQUEsUUFBUUMsRUFBUixDQUFXLG9CQUFYLEVBQWlDQyxRQUFRQyxLQUF6Qzs7QUFFQSxNQUFNQyxTQUFTLGtCQUFRQSxNQUFSLENBQWUscUJBQWYsRUFBc0NDLFdBQVc7QUFDL0RBLFdBQVUsNkJBQWVBLE9BQWYsQ0FBVjs7QUFFQSxRQUFPLGdCQUFnQkMsR0FBaEIsRUFBcUJDLE1BQXJCLEVBQThCO0FBQ3BDO0FBQ0EsUUFBTUMsYUFBYUgsUUFBUUksS0FBUixDQUFjQyxHQUFkLDRCQUFuQjtBQUNBLFFBQU1DLG1CQUFtQixnQ0FBZ0JILFVBQWhCLENBQXpCOztBQUVBO0FBQ0FGLE1BQUlNLFNBQUosQ0FBY0QsZ0JBQWQ7O0FBRUE7QUFDQSxRQUFNRSxRQUFRQyxHQUFSLENBQ0xOLFdBQVdFLEdBQVgsQ0FBZUssYUFBYTtBQUMzQixTQUFNLEVBQUVDLFVBQVVYLFFBQVFXLE9BQXBCLEVBQTZCQyxJQUE3QixFQUFtQ0MsTUFBbkMsRUFBMkNULEtBQTNDLEtBQXFETSxTQUEzRDtBQUNBLFNBQU1JLE9BQU8sZ0JBQUtILE9BQUwsRUFBY0MsSUFBZCxDQUFiO0FBQ0EsVUFBTyxlQUFNRSxJQUFOLEVBQVlELE9BQU9FLFFBQVAsRUFBWixFQUErQixFQUFFQyxPQUFPLEdBQVQsRUFBL0IsQ0FBUDtBQUNBLEdBSkQsQ0FESyxDQUFOO0FBUUEsRUFqQkQ7QUFrQkEsQ0FyQmMsQ0FBZjs7a0JBdUJlakIsTSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdiYWJlbC1wb2x5ZmlsbCc7XG5pbXBvcnQgcG9zdGNzcyBmcm9tICdwb3N0Y3NzJztcbmltcG9ydCB7IGpvaW4gfSBmcm9tICdwYXRoJztcbmltcG9ydCB7IHdyaXRlIH0gZnJvbSAnLi9saWIvaW8nO1xuaW1wb3J0IHsgcHJvY2Vzc09wdGlvbnMgfSBmcm9tICcuL2xpYi9vcHRpb25zJztcbmltcG9ydCB7IGNyZWF0ZUNvbnRhaW5lciwgY3JlYXRlVXBkYXRlckZuIH0gZnJvbSAnLi9saWIvY29udGFpbmVyJztcblxucHJvY2Vzcy5vbigndW5oYW5kbGVkUmVqZWN0aW9uJywgY29uc29sZS5lcnJvcik7XG5cbmNvbnN0IHBsdWdpbiA9IHBvc3Rjc3MucGx1Z2luKCdwb3N0Y3NzLXNwbGl0LXZhbHVlJywgb3B0aW9ucyA9PiB7XG5cdG9wdGlvbnMgPSBwcm9jZXNzT3B0aW9ucyhvcHRpb25zKTtcblxuXHRyZXR1cm4gYXN5bmMgZnVuY3Rpb24oIENTUywgUkVTVUxUICkge1xuXHRcdC8vIHNldHVwIGNvbnRhaW5lcnMgZm9yIG5ldyBmaWxlc1xuXHRcdGNvbnN0IGNvbnRhaW5lcnMgPSBvcHRpb25zLmZpbGVzLm1hcChjcmVhdGVDb250YWluZXIpO1xuXHRcdGNvbnN0IHVwZGF0ZUNvbnRhaW5lcnMgPSBjcmVhdGVVcGRhdGVyRm4oY29udGFpbmVycyk7XG5cblx0XHQvLyBkbyB0aGUgd29ya1xuXHRcdENTUy53YWxrUnVsZXModXBkYXRlQ29udGFpbmVycyk7XG5cblx0XHQvLyB3cml0ZSBmaWxlc1xuXHRcdGF3YWl0IFByb21pc2UuYWxsKFxuXHRcdFx0Y29udGFpbmVycy5tYXAoY29udGFpbmVyID0+IHtcblx0XHRcdFx0Y29uc3QgeyBvdXRwYXRoID0gb3B0aW9ucy5vdXRwYXRoLCBuYW1lLCByZXN1bHQsIGZpbGVzIH0gPSBjb250YWluZXI7XG5cdFx0XHRcdGNvbnN0IGZpbGUgPSBqb2luKG91dHBhdGgsIG5hbWUpO1xuXHRcdFx0XHRyZXR1cm4gd3JpdGUoZmlsZSwgcmVzdWx0LnRvU3RyaW5nKCksIHsgZmxhZ3M6ICdhJyB9KTtcblx0XHRcdH0pXG5cdFx0KVxuXG5cdH1cbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBwbHVnaW47Il19